{"version":3,"sources":["constants.js","redux/reducers/visibilityFilter.js","redux/actionTypes.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddTodo.js","redux/selectors.js","components/RemoveTodo.js","components/Todo.js","components/TodoList.js","components/VisibilityFilters.js","components/TodoComp.js","components/AddList.js","TodoApp.js","index.js"],"names":["VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","initialState","1","visibilityFilter","state","arguments","length","undefined","action","type","Object","objectSpread","assign","defineProperty","payload","list","filter","newState","lists","allIds","byIds","combineReducers","todos","_action$payload","id","content","concat","toConsumableArray","completed","newByIds","newAllIds","idx","_action$payload2","listId","newLists","_action$payload3","title","keys","forEach","key","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","nextTodoId","nextListId","AddTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","handleAddTodo","addTodo","handleEnterKey","e","keyCode","which","_this2","react_default","a","createElement","onChange","target","value","onKeyDown","className","onClick","React","Component","connect","getTodosState","store","getTodos","getTodoList","map","getTodoById","getTodosByVisAndList","Todos","todo","getTodosByList","RemoveTodo","handleRemoveTodo","console","log","removeTodo","bind","assertThisInitialized","toggleTodo","_ref","cx","components_RemoveTodo","ownProps","filteredTodos","index","components_Todo","mapDispatchToProps","setFilter","activeFilter","filterKey","currentFilter","TodoComp","handleTitleClick","editable","renameList","updateTitle","handleRemoveList","confirm","removeList","removeListFilter","listName","components_AddTodo","components_TodoList","components_VisibilityFilters","newTitle","AddList","handleAddList","addList","TodoApp","components_AddList","listsArray","components_TodoComp","rootElement","document","getElementById","ReactDOM","render","es","src_TodoApp"],"mappings":"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","file":"static/js/main.22a1cb32.chunk.js","sourcesContent":["export const VISIBILITY_FILTERS = {\n\tALL: \"all\",\n\tCOMPLETED: \"completed\",\n\tINCOMPLETE: \"incomplete\"\n};\n","import { SET_FILTER, REMOVE_LIST_FILTER } from \"../actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../../constants\";\n\nconst initialState = {1: VISIBILITY_FILTERS.ALL};\n\n\n//FIX -> look into the rules for the returned state (works now)\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n      case SET_FILTER: {\n\t\t  return {...state,\n\t\t\t  ...Object.assign(state, { [action.payload.list]: action.payload.filter})};\n      }\n\t  case REMOVE_LIST_FILTER: {\n\t\t  const { list } = action.payload;\n\t\t  const newState = Object.assign({}, state);\n\t\t  delete newState[list];\n\t\t  return newState;\n\t  }\n\t  default: {\n\t\t  return state;\n    }\n  }\n};\n\n\nexport default visibilityFilter;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\nexport const ADD_LIST = \"ADD_LIST\";\nexport const RENAME_LIST = \"RENAME_LIST\";\nexport const REMOVE_LIST = \"REMOVE_LIST\";\nexport const REMOVE_LIST_FILTER = \"REMOVE_LIST_FILTER\";\n","import { ADD_TODO, TOGGLE_TODO, REMOVE_TODO, ADD_LIST, RENAME_LIST, REMOVE_LIST } from \"../actionTypes\";\n\nconst initialState = {\n\tlists: {1: \"Todo\"},\n  allIds: [],\n  byIds: {}\n}; \n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n      case ADD_TODO: {\n\t\tconst { id, list, content } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n\t\t\t[id]: {\n\t\t\t\tlist,\n\t\t\t\tcontent,\n\t\t\t\tcompleted: false\n          }\n        }\n      };\n    }\n      case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            completed: !state.byIds[id].completed\n          }\n        }\n      };\n    }\n\t  case REMOVE_TODO: {\n\t\t  const  { id }  = action.payload;\n\t\t  const newByIds = Object.assign({}, state.byIds);\n\t\t  const newAllIds = (state.allIds.filter(idx => idx !== id));\n\t\t  delete newByIds[id];\n\t\t  return { \n\t  \t\t  ...state,\n\t\t\t  allIds: newAllIds,\n\t\t\t  byIds: newByIds};\n\t  \t\t \n\t\t  \n\t  }\n\t  case ADD_LIST: {\n\t\t  const { listId, list } = action.payload;\n\t\t  const newLists = Object.assign(state.lists, { [listId]: list} );\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tlists: newLists\n\t\t\t\t};\n\t  }\n\t\t  \n\t\tcase RENAME_LIST: {\n\t\t\tconst { id, title } = action.payload;\n\t\t\tconst newLists = Object.assign(state.lists, { [id]: title });\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlists: newLists\n\t\t\t};\n\t\t}\n\t\t\t//TODO -> in the following case I need to also do the following:\n\t\t\t// 1. remove the id from allIds\n\t\t\t// 2. add an alert for confirmation of deletion.\n\t\tcase REMOVE_LIST: {\n\t\t\tconst { list } = action.payload;\n\t\t\tconst newByIds = Object.assign({}, state.byIds); //just duplicating the object in order not to mutate it with delete.\n\t\t\tObject.keys(newByIds).forEach(key => newByIds[key].list === list ? delete newByIds[key] : null);\n\t\t\tconst newLists = Object.assign({}, state.lists);\n\t\t\tdelete newLists[list];\n\t\t\treturn {\n\t\t\t\t\n\t\t\t\tlists: newLists,\n\t\t\t\tbyIds: newByIds,\n\t\t\t\tallIds: state.allIds //TODO: get the id in order to remove the todos' id's from this property \n\t\t\t};\n\t\t}\n\t\tdefault:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\n//the default reducer from todos initiates:\n// const initialState = {\n//   allIds: [],\n//   byIds: {}\n// };\n//\n// and controls the ADD_TODO and TOGGLE_TODO state.\nexport default combineReducers({ todos, visibilityFilter });\n\n\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { ADD_TODO, TOGGLE_TODO, REMOVE_TODO, SET_FILTER, ADD_LIST, RENAME_LIST, REMOVE_LIST, REMOVE_LIST_FILTER } from \"./actionTypes\";\n\nlet nextTodoId = 0;\nlet nextListId = 1;\nexport const addTodo = ( list, content ) => ({\n  type: ADD_TODO,\n\tpayload: {\n\t\tlist,\n    id: ++nextTodoId,\n    content\n  }\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: { id }\n});\n\nexport const removeTodo = id => ({\n\ttype: REMOVE_TODO,\n\tpayload: { id }\n});\n\nexport const setFilter = ( list, filter ) => ({\n\ttype: SET_FILTER,\n\tpayload: {\n\t\tlist: list,\n\t\tfilter: filter }\n});\n\n\nexport const addList = list => ({\n\ttype: ADD_LIST,\n\tpayload: {\n\t\tlist,\n\t\tlistId: ++nextListId }\n});\n\nexport const renameList = ( listId, newTitle ) => ({\n\ttype: RENAME_LIST,\n\tpayload: {\n\t\tid: listId,\n\t\ttitle: newTitle }\n});\n\nexport const removeList = list => ({\n\ttype:  REMOVE_LIST,\n\tpayload: { list }\n});\n\nexport const removeListFilter = list => ({\n\ttype: REMOVE_LIST_FILTER,\n\tpayload: { list }\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\n\nclass AddTodo extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { input: \"\" };\n    }\n    \n  updateInput = input => {\n    this.setState({ input });\n  };\n\n    handleAddTodo = () => {\n        this.props.addTodo(this.props.list, this.state.input); //dispatches actions to add todo\n    this.setState({ input: \"\" }); // sets state back to empty string\n    };\n\n    handleEnterKey = (e) => {\n        const keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            this.props.addTodo(this.props.list, this.state.input);\n            this.setState({ input: \"\" });\n        }}\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={e => this.updateInput(e.target.value)}\n          onKeyDown={this.handleEnterKey}\n          value={this.state.input}\n        />\n        <button className=\"add-todo\" onClick={this.handleAddTodo}>\n          Add Todo\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(AddTodo);\n// export default AddTodo;\n","import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n  getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n\nexport const getTodosByList = (store, list) => {\n\tconst allTodos = getTodos(store);\n\treturn allTodos.filter(todo => (todo.list === list));\n};\n\nexport const getTodosByVisAndList = (store, list, visibilityFilter) => {\n\tconst Todos = getTodosByList(store, list);\n\tswitch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return Todos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return Todos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return Todos;\n\t}\n};\n\nexport const getListById =  (store, listId) => {\n\treturn store.todos.lists.listId;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeTodo } from \"../redux/actions\";\nimport { getTodoById } from \"../redux/selectors.js\";\n\nclass RemoveTodo extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleRemoveTodo = this.handleRemoveTodo.bind(this);\n    }\n\n    handleRemoveTodo = () => {\n        console.log(\"triggered\");\n        this.props.removeTodo(this.props.id); //dispatches actions to remove todo\n    };\n\n    render() {\n        console.log(this.props);\n        return (\n            \n              <span className=\"remove-todo\" onClick={this.handleRemoveTodo}>\n               - - Delete - -\n              </span>\n            \n        );\n    }\n}\n\nexport default connect(\n  null,\n  { removeTodo }\n)(RemoveTodo);\n// export default AddTodo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport RemoveTodo from \"./RemoveTodo.js\";\nimport { toggleTodo, removeTodo } from \"../redux/actions\";\n\n\n\n\nconst Todo = (({ todo, toggleTodo }) => (\n    <li className=\"todo-item\" >\n      {todo && todo.completed ? \"· \" : \"+ \"}\n      <span\n        className={cx(\"todo-item__text\",\n            todo && todo.completed && \"todo-item__text--completed\"\n        )} onClick={() => toggleTodo(todo.id)}\n      >\n        {todo.content}\n      </span>\n      <RemoveTodo id={todo.id}/>\n    </li>\n));\n\n// export default Todo;\nexport default connect(\n    null ,\n    { toggleTodo }\n)(Todo);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport { getTodosByVisAndList } from \"../redux/selectors\";\n\nfunction TodoList ({ state, list, visibilityFilter }) {\n\n    const filteredTodos = getTodosByVisAndList(state, list, visibilityFilter);\n    return (\n        <ul className=\"todo-list\">\n          {filteredTodos && filteredTodos.length\n              ? filteredTodos.map((todo, index) => {\n                  return <Todo key={`todo-${todo.id}`} todo={todo} />;\n              }) :\n              visibilityFilter === \"all\" ? \"No todos left!\" :\n              visibilityFilter === \"completed\" ? \"No completed here..!\" :\n              \"No uncompleted tasks!\"\n          \n          }\n        </ul>\n    );\n}\n\n\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const { visibilityFilter } = state; \n    const { list } = ownProps;\n   \n    return {\n        state,\n        list: list,\n        visibilityFilter: visibilityFilter[list]\n        \n    };\n};    \n    export default connect(mapStateToProps)(TodoList);\n\n\n// export default TodoList;\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../redux/actions\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\n\nfunction VisibilityFilters({ list, visibilityFilter, setFilter, activeFilter }) {\n        \n        return (\n            <div className=\"visibility-filters\">\n              {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n                  const currentFilter = VISIBILITY_FILTERS[filterKey];\n                  /* const activeFilter = visibilityFilter[list]; */\n                  return (\n                      <span\n                        key={`visibility-filter-${currentFilter}`}\n                        className={\n                            cx(\n                            \"filter\",\n                            currentFilter === activeFilter && \"filter--active\")}\n                        onClick={() =>\n                            (setFilter(list, currentFilter))\n                        }>\n                        {currentFilter}\n                      </span>\n                  );\n              })}\n            </div>\n        );\n    };\n\n\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const list = ownProps.list;\n    const visibilityFilter = state.visibilityFilter;\n    return {\n        visibilityFilter: visibilityFilter,\n        list: list, \n        activeFilter: visibilityFilter[list] \n       \n     \n    };\n};\n\nconst mapDispatchToProps = {\n    setFilter\n};\n\n// export default VisibilityFilters;\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VisibilityFilters);\n","import React from 'react';\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport VisibilityFilters from './VisibilityFilters';\nimport { connect } from 'react-redux';\nimport { renameList, removeList, removeListFilter } from '../redux/actions.js';\n\nclass TodoComp extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editable: false,\n            title: this.props.listName\n        };\n    }\n\n    handleTitleClick = () =>\n        this.setState({editable: !this.state.editable});\n\n    handleEnterKey = (e) => {\n        const keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            this.props.renameList(this.props.list, this.state.title);\n            this.setState({editable: !this.state.editable});\n        }\n    }\n\n    updateTitle = title => {\n        this.setState({ title });\n    }\n\n    handleRemoveList = (props) => { \n        // const isSure = window.confirm(\"remove the list?\");\n        \n        if (window.confirm(\"are you sure?\")) {\n            this.props.removeList(this.props.list);\n            this.props.removeListFilter(this.props.list);}\n        \n    }\n    \n    \n    render(props) {  \n\t    return (\n\t\t\t<div className=\"todo-comp\">\n              <div>\n                {this.state.editable ?\n                    <input\n                      onChange={e => this.updateTitle(e.target.value)}\n                      onKeyDown={this.handleEnterKey}\n                      value={this.state.title}>\n                    </input>\n                    :\n                    <div>\n                    <h2>\n                      <span onClick={this.handleTitleClick}>{this.props.listName}</span>\n                      <span\n                        className=\"remove-list\"\n                        onClick={this.handleRemoveList}> remove</span></h2>\n                    </div>}\n              </div>\n              <AddTodo list={this.props.list} />\n              <TodoList list={this.props.list} />\n              <VisibilityFilters list={this.props.list} />\n            </div>\n\t    );\n    }\n}\n\nexport default connect(\n    null,\n    { renameList, removeList, removeListFilter }\n)(TodoComp);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addList } from '../redux/actions.js';\n\nclass AddList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {input: \"\"};\n    }\n\n    updateInput = input => {\n        this.setState({ input });\n    }\n    \n    handleAddList = () => {\n        this.props.addList(this.state.input);\n        this.setState({ input: \"\" });\n        \n    }\n\n        handleEnterKey = (e) => {\n        const keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            this.props.addList(this.state.input);\n            this.setState({ input: \"\" });\n        }}\n\n    \n\trender() {\n\t\treturn (\n\t\t\t<div>\n              <input\n                onChange={e => this.updateInput(e.target.value)}\n                onKeyDown={this.handleEnterKey}\n                value={this.state.input}>\n              </input>\n              <button className='add-list' onClick={this.handleAddList}>\n                Add a new Todo list\n              </button>\n            </div>\n\t\t);\n\t}\n}\n\nexport default connect(\n    null,\n    { addList }\n)(AddList);\n","import React from 'react';\nimport AddTodo from './components/AddTodo.js';\nimport TodoList from './components/TodoList.js';\nimport VisibilityFilters from './components/VisibilityFilters.js';\nimport TodoComp from './components/TodoComp.js';\nimport AddList from './components/AddList.js';\nimport { getListById } from './redux/selectors.js';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass TodoApp extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleGetListById(list) {\n        return getListById(list);\n    }\n    \n    render() {\n        return (\n\t\t\t<div className=\"todo-app\">\n\t\t\t  <h1>Todo List</h1>\n              <h2>Extending the redux basic example. </h2>\n               <AddList />\n              <div>{this.props.listsArray && this.props.listsArray !== 0 ?\n                  this.props.listsArray.map(list =>\n                      <div>\n                        <TodoComp\n                          listName={this.props.lists[list]}\n                          list={list}\n                        />\n                        {console.log(this.props.lists[list])}\n                   </div>\n                  ) : this.props.a}</div>\n            </div>\n\t);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        listsArray: Object.keys(state.todos.lists),\n        lists: state.todos.lists,\n        a: \"Bob\"\n    };\n} \n\nexport default connect(mapStateToProps)(TodoApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store';\nimport TodoApp from './TodoApp';\nimport './App.css';\n\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t\t<Provider store={store}>\n\t<TodoApp />\n        </Provider>,\n    rootElement\n);\n"],"sourceRoot":""}
{"version":3,"sources":["constants.js","redux/reducers/visibilityFilter.js","redux/actionTypes.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddTodo.js","redux/selectors.js","components/RemoveTodo.js","components/Todo.js","components/TodoList.js","components/VisibilityFilters.js","components/TodoComp.js","components/AddList.js","TodoApp.js","index.js"],"names":["VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","initialState","1","visibilityFilter","state","arguments","length","undefined","action","type","Object","objectSpread","assign","defineProperty","payload","list","filter","lists","allIds","byIds","combineReducers","todos","_action$payload","id","content","concat","toConsumableArray","completed","newByIds","newAllIds","idx","_action$payload2","listId","newLists","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","nextTodoId","nextListId","AddTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","input","setState","handleAddTodo","addTodo","handleEnterKey","e","keyCode","which","_this2","react_default","a","createElement","onChange","target","value","onKeyDown","className","onClick","React","Component","connect","getTodosState","store","getTodos","getTodoList","map","getTodoById","getTodosByVisAndList","Todos","todo","getTodosByList","RemoveTodo","handleRemoveTodo","console","log","removeTodo","bind","assertThisInitialized","toggleTodo","_ref","cx","components_RemoveTodo","ownProps","filteredTodos","index","components_Todo","key","mapDispatchToProps","setFilter","activeFilter","keys","filterKey","currentFilter","listName","components_AddTodo","components_TodoList","components_VisibilityFilters","AddList","handleAddList","addList","TodoApp","components_AddList","listsArray","components_TodoComp","rootElement","document","getElementById","ReactDOM","render","es","src_TodoApp"],"mappings":"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","file":"static/js/main.25560af7.chunk.js","sourcesContent":["export const VISIBILITY_FILTERS = {\n\tALL: \"all\",\n\tCOMPLETED: \"completed\",\n\tINCOMPLETE: \"incomplete\"\n};\n","import { SET_FILTER } from \"../actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../../constants\";\n\nconst initialState = {1: VISIBILITY_FILTERS.ALL};\n\n\n//FIX -> look into the rules for the returned state (works now)\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER: {\n\t\treturn {...state,\n\t\t\t...Object.assign(state, { [action.payload.list]: action.payload.filter})};\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default visibilityFilter;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\nexport const ADD_LIST = \"ADD_LIST\";\n","import { ADD_TODO, TOGGLE_TODO, REMOVE_TODO, ADD_LIST } from \"../actionTypes\";\n\nconst initialState = {\n\tlists: {1: \"Todo\"},\n  allIds: [],\n  byIds: {}\n}; \n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n\t\tconst { id, list, content } = action.payload;\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byIds: {\n          ...state.byIds,\n\t\t\t[id]: {\n\t\t\t\tlist,\n\t\t\t\tcontent,\n\t\t\t\tcompleted: false\n          }\n        }\n      };\n    }\n      case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        byIds: {\n          ...state.byIds,\n          [id]: {\n            ...state.byIds[id],\n            completed: !state.byIds[id].completed\n          }\n        }\n      };\n    }\n\t  case REMOVE_TODO: {\n\t\t  const  { id }  = action.payload;\n\t\t  const newByIds = Object.assign({}, state.byIds);\n\t\t  const newAllIds = (state.allIds.filter(idx => idx !== id));\n\t\t  delete newByIds[id];\n\t\t  return { \n\t  \t\t  ...state,\n\t\t\t  allIds: newAllIds,\n\t\t\t  byIds: newByIds};\n\t  \t\t \n\t\t  \n\t  }\n\t  case ADD_LIST: {\n\t\t  const { listId, list } = action.payload;\n\t\t  const newLists = Object.assign(state.lists, {[listId]: list});\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tlists: newLists\n\t\t\t\t};\n\t  }\n\t\t  \n\t  \n\t  \n\t\t  default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\n//the default reducer from todos initiates:\n// const initialState = {\n//   allIds: [],\n//   byIds: {}\n// };\n//\n// and controls the ADD_TODO and TOGGLE_TODO state.\nexport default combineReducers({ todos, visibilityFilter });\n\n\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { ADD_TODO, TOGGLE_TODO, REMOVE_TODO, SET_FILTER, ADD_LIST } from \"./actionTypes\";\n\nlet nextTodoId = 0;\nlet nextListId = 1;\nexport const addTodo = (list, content) => ({\n  type: ADD_TODO,\n\tpayload: {\n\t\tlist,\n    id: ++nextTodoId,\n    content\n  }\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  payload: { id }\n});\n\nexport const removeTodo = id => ({\n\ttype: REMOVE_TODO,\n\tpayload: { id }\n});\n\nexport const setFilter = (list, filter) => ({\n\ttype: SET_FILTER,\n\tpayload: {\n\t\tlist: list,\n\t\tfilter: filter }\n});\n\n\nexport const addList = list => ({\n\ttype: ADD_LIST,\n\tpayload: {\n\t\tlist,\n\t\tlistId: ++nextListId}});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\n\nclass AddTodo extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { input: \"\" };\n    }\n    \n  updateInput = input => {\n    this.setState({ input });\n  };\n\n    handleAddTodo = () => {\n        this.props.addTodo(this.props.list, this.state.input); //dispatches actions to add todo\n    this.setState({ input: \"\" }); // sets state back to empty string\n    };\n\n    handleEnterKey = (e) => {\n        const keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            this.props.addTodo(this.props.list, this.state.input);\n            this.setState({ input: \"\" });\n        }}\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={e => this.updateInput(e.target.value)}\n          onKeyDown={this.handleEnterKey}\n          value={this.state.input}\n        />\n        <button className=\"add-todo\" onClick={this.handleAddTodo}>\n          Add Todo\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(AddTodo);\n// export default AddTodo;\n","import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n  getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n\nexport const getTodosByList = (store, list) => {\n\tconst allTodos = getTodos(store);\n\treturn allTodos.filter(todo => (todo.list === list));\n};\n\nexport const getTodosByVisAndList = (store, list, visibilityFilter) => {\n\tconst Todos = getTodosByList(store, list);\n\tswitch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return Todos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return Todos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return Todos;\n\t}\n};\n\nexport const getListById =  (store, listId) => {\n\treturn store.todos.lists.listId;\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeTodo } from \"../redux/actions\";\nimport { getTodoById } from \"../redux/selectors.js\";\n\nclass RemoveTodo extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleRemoveTodo = this.handleRemoveTodo.bind(this);\n    }\n\n    handleRemoveTodo = () => {\n        console.log(\"triggered\");\n        this.props.removeTodo(this.props.id); //dispatches actions to remove todo\n    };\n\n    render() {\n        console.log(this.props);\n        return (\n            \n              <span className=\"remove-todo\" onClick={this.handleRemoveTodo}>\n               - - Delete - -\n              </span>\n            \n        );\n    }\n}\n\nexport default connect(\n  null,\n  { removeTodo }\n)(RemoveTodo);\n// export default AddTodo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport RemoveTodo from \"./RemoveTodo.js\";\nimport { toggleTodo, removeTodo } from \"../redux/actions\";\n\n\n\n\nconst Todo = (({ todo, toggleTodo }) => (\n    <li className=\"todo-item\" >\n      {todo && todo.completed ? \"· \" : \"+ \"}\n      <span\n        className={cx(\"todo-item__text\",\n            todo && todo.completed && \"todo-item__text--completed\"\n        )} onClick={() => toggleTodo(todo.id)}\n      >\n        {todo.content}\n      </span>\n      <RemoveTodo id={todo.id}/>\n    </li>\n));\n\n// export default Todo;\nexport default connect(\n    null ,\n    { toggleTodo }\n)(Todo);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\nimport { getTodosByVisAndList } from \"../redux/selectors\";\n\nfunction TodoList ({ state, list, visibilityFilter }) {\n\n    const filteredTodos = getTodosByVisAndList(state, list, visibilityFilter);\n    return (\n        <ul className=\"todo-list\">\n          {filteredTodos && filteredTodos.length\n              ? filteredTodos.map((todo, index) => {\n                  return <Todo key={`todo-${todo.id}`} todo={todo} />;\n              }) :\n              visibilityFilter === \"all\" ? \"No todos left!\" :\n              visibilityFilter === \"completed\" ? \"No completed here..!\" :\n              \"No uncompleted tasks!\"\n          \n          }\n        </ul>\n    );\n}\n\n\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const { visibilityFilter } = state; \n    const { list } = ownProps;\n   \n    return {\n        state,\n        list: list,\n        visibilityFilter: visibilityFilter[list]\n        \n    };\n};    \n    export default connect(mapStateToProps)(TodoList);\n\n\n// export default TodoList;\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../redux/actions\";\nimport { VISIBILITY_FILTERS } from \"../constants\";\n\nfunction VisibilityFilters({ list, visibilityFilter, setFilter, activeFilter }) {\n        \n        return (\n            <div className=\"visibility-filters\">\n              {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n                  const currentFilter = VISIBILITY_FILTERS[filterKey];\n                  /* const activeFilter = visibilityFilter[list]; */\n                  return (\n                      <span\n                        key={`visibility-filter-${currentFilter}`}\n                        className={\n                            cx(\n                            \"filter\",\n                            currentFilter === activeFilter && \"filter--active\")}\n                        onClick={() =>\n                            (setFilter(list, currentFilter))\n                        }>\n                        {currentFilter}\n                      </span>\n                  );\n              })}\n            </div>\n        );\n    };\n\n\n\nconst mapStateToProps = ( state, ownProps ) => {\n    const list = ownProps.list;\n    const visibilityFilter = state.visibilityFilter;\n    return {\n        visibilityFilter: visibilityFilter,\n        list: list, \n        activeFilter: visibilityFilter[list] \n       \n     \n    };\n};\n\nconst mapDispatchToProps = {\n    setFilter\n};\n\n// export default VisibilityFilters;\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VisibilityFilters);\n","import React from 'react';\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport VisibilityFilters from './VisibilityFilters';\nimport { connect } from 'react-redux';\n\nfunction TodoComp(props) {  \n\n\treturn (\n\t\t\t<div className=\"todo-comp\">\n              <h2>{props.listName}</h2>\n              <AddTodo list={props.list} />\n              <TodoList list={props.list} />\n              <VisibilityFilters list={props.list} />\n            </div>\n\t    );\n    }\n\n\nexport default connect()(TodoComp);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addList } from '../redux/actions.js';\n\nclass AddList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {input: \"\"};\n    }\n\n    updateInput = input => {\n        this.setState({ input });\n    }\n    \n    handleAddList = () => {\n        this.props.addList(this.state.input);\n        this.setState({ input: \"\" });\n        \n    }\n\n        handleEnterKey = (e) => {\n        const keyCode = e.keyCode || e.which;\n        if (keyCode === 13) {\n            this.props.addList(this.state.input);\n            this.setState({ input: \"\" });\n        }}\n\n    \n\trender() {\n\t\treturn (\n\t\t\t<div>\n              <input\n                onChange={e => this.updateInput(e.target.value)}\n                onKeyDown={this.handleEnterKey}\n                value={this.state.input}>\n              </input>\n              <button className='add-list' onClick={this.handleAddList}>\n                Add a new Todo list\n              </button>\n            </div>\n\t\t);\n\t}\n}\n\nexport default connect(\n    null,\n    { addList }\n)(AddList);\n","import React from 'react';\nimport AddTodo from './components/AddTodo.js';\nimport TodoList from './components/TodoList.js';\nimport VisibilityFilters from './components/VisibilityFilters.js';\nimport TodoComp from './components/TodoComp.js';\nimport AddList from './components/AddList.js';\nimport { getListById } from './redux/selectors.js';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass TodoApp extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleGetListById(list) {\n        return getListById(list);\n    }\n    \n    render() {\n        return (\n\t\t\t<div className=\"todo-app\">\n\t\t\t  <h1>Todo List</h1>\n              <h2>Extending the redux basic example. </h2>\n               <AddList />\n              <div>{this.props.listsArray && this.props.listsArray !== 0 ?\n                  this.props.listsArray.map(list =>\n                      <div>\n                        <TodoComp\n                          listName={this.props.lists[list]}\n                          list={list}\n                        />\n                        {console.log(this.props.lists[list])}\n                   </div>\n                  ) : this.props.a}</div>\n            </div>\n\t);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        listsArray: Object.keys(state.todos.lists),\n        lists: state.todos.lists,\n        a: \"Bob\"\n    };\n} \n\nexport default connect(mapStateToProps)(TodoApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store';\nimport TodoApp from './TodoApp';\nimport './App.css';\n\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t\t<Provider store={store}>\n\t<TodoApp />\n        </Provider>,\n    rootElement\n);\n"],"sourceRoot":""}